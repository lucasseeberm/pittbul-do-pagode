apiVersion: v1
kind: ConfigMap
metadata:
  name: usuarios-sql-configmap
data:
  usuarios.sql: |
    # Copie e cole o conteúdo do seu arquivo 'database/usuarios.sql' aqui
    CREATE TABLE usuarios (
        id INT AUTO_INCREMENT PRIMARY KEY,
        nome VARCHAR(100) NOT NULL,
        email VARCHAR(100) UNIQUE NOT NULL,
        senha VARCHAR(255) NOT NULL,
        data_criacao TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        is_admin BOOLEAN DEFAULT FALSE
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
    CREATE TABLE favoritos (
        id INT AUTO_INCREMENT PRIMARY KEY,
        usuario_id INT NOT NULL,
        produto_id INT NOT NULL,
        data_adicao TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        FOREIGN KEY (usuario_id) REFERENCES usuarios(id) ON DELETE CASCADE,
        UNIQUE KEY (usuario_id, produto_id)
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
    ALTER TABLE usuarios
    ADD COLUMN google_auth_secret VARCHAR(255) NULL,
    ADD COLUMN is_2fa_enabled BOOLEAN NOT NULL DEFAULT FALSE;
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: estoque-sql-configmap
data:
  estoque.sql: |
    # Copie e cole o conteúdo do seu arquivo 'database/estoque.sql' aqui
    CREATE TABLE produtos (
        id INT AUTO_INCREMENT PRIMARY KEY,
        nome VARCHAR(150) NOT NULL,
        descricao TEXT,
        preco DECIMAL(10, 2) NOT NULL,
        estoque INT NOT NULL,
        estoque_minimo INT DEFAULT 5,
        categoria VARCHAR(50),
        principio_ativo VARCHAR(100),
        controlado BOOLEAN DEFAULT FALSE,
        data_criacao TIMESTAMP DEFAULT CURRENT_TIMESTAMP
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
    CREATE TABLE movimentacoes_estoque (
        id INT AUTO_INCREMENT PRIMARY KEY,
        produto_id INT NOT NULL,
        tipo_movimentacao VARCHAR(50) NOT NULL,
        quantidade_alterada INT NOT NULL,
        observacao VARCHAR(255),
        data_movimentacao TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        FOREIGN KEY (produto_id) REFERENCES produtos(id)
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
    CREATE TABLE alertas_estoque (
        id INT AUTO_INCREMENT PRIMARY KEY,
        produto_id INT NOT NULL,
        mensagem VARCHAR(255) NOT NULL,
        status VARCHAR(50) NOT NULL DEFAULT 'novo',
        data_alerta TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        FOREIGN KEY (produto_id) REFERENCES produtos(id)
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
    CREATE TABLE avaliacoes (
        id INT AUTO_INCREMENT PRIMARY KEY,
        produto_id INT NOT NULL,
        usuario_id INT NOT NULL,
        usuario_nome VARCHAR(100) NOT NULL,
        nota INT NOT NULL,
        comentario TEXT,
        data_avaliacao TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        FOREIGN KEY (produto_id) REFERENCES produtos(id)
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
    INSERT INTO produtos (nome, descricao, preco, estoque, categoria, principio_ativo, controlado) VALUES
    ('Dipirona 500mg', 'Analgésico e antitérmico.', 15.50, 100, 'Analgésicos', 'Dipirona Sódica', FALSE),
    ('Amoxicilina 500mg', 'Antibiótico para infecções bacterianas.', 45.00, 50, 'Antibióticos', 'Amoxicilina', TRUE),
    ('Paracetamol 750mg', 'Indicado para o alívio da dor e febre.', 12.00, 200, 'Analgésicos', 'Paracetamol', FALSE),
    ('Losartana Potássica 50mg', 'Anti-hipertensivo.', 25.80, 80, 'Cardiovascular', 'Losartana', TRUE);
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: vendas-sql-configmap
data:
  vendas.sql: |
    # Copie e cole o conteúdo do seu arquivo 'database/vendas.sql' aqui
    CREATE TABLE pedidos (
        id INT AUTO_INCREMENT PRIMARY KEY,
        usuario_id INT NOT NULL,
        valor_total DECIMAL(10, 2),
        status_pedido VARCHAR(50) DEFAULT 'Pendente',
        data_pedido TIMESTAMP DEFAULT CURRENT_TIMESTAMP
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
    CREATE TABLE pedido_itens (
        id INT AUTO_INCREMENT PRIMARY KEY,
        pedido_id INT,
        produto_id INT NOT NULL,
        produto_nome VARCHAR(150),
        quantidade INT,
        preco_unitario DECIMAL(10, 2),
        FOREIGN KEY (pedido_id) REFERENCES pedidos(id)
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
    CREATE TABLE receitas_medicas (
        id INT AUTO_INCREMENT PRIMARY KEY,
        usuario_id INT NOT NULL,
        pedido_id INT,
        nome_arquivo_original VARCHAR(255) NOT NULL,
        path_arquivo_salvo VARCHAR(255) NOT NULL,
        status ENUM('pendente', 'aprovada', 'rejeitada') NOT NULL DEFAULT 'pendente',
        data_upload TIMESTAMP DEFAULT CURRENT_TIMESTAMP
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
    CREATE TABLE cupons (
        id INT AUTO_INCREMENT PRIMARY KEY,
        codigo VARCHAR(50) UNIQUE NOT NULL,
        tipo_desconto ENUM('percentual', 'fixo') NOT NULL,
        valor DECIMAL(10, 2) NOT NULL,
        data_validade DATE NOT NULL,
        usos_restantes INT NOT NULL DEFAULT 1,
        ativo BOOLEAN NOT NULL DEFAULT TRUE
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
    ALTER TABLE pedidos
    ADD COLUMN data_agendamento DATE NULL,
    ADD COLUMN periodo_agendamento VARCHAR(50) NULL;
    ALTER TABLE pedidos
    ADD COLUMN metodo_pagamento VARCHAR(50) NULL AFTER status_pedido;